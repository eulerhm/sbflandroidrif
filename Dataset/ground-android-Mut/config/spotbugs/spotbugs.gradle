/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Spotbugs plugin configuration.
 *
 * It finds bugs in Java programs. It looks for instances of “bug patterns” — code instances that
 * are likely to be errors.
 * GitHub link: https://github.com/spotbugs/spotbugs
 *
 * Runs automatically with every build on GoogleCloudBuild.
 *
 * For manual run,
 * $ ./gradlew spotbugs
 *
 * HTML report is stored under: gnd/build/reports/spotbugs/
 */
buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.com.github.spotbugs.snom:spotbugs-gradle-plugin:4.7.2"
    }
}

apply plugin: 'com.github.spotbugs'

def configDir = "${project.rootDir}/config/spotbugs"
def reportsDir = "${project.buildDir}/reports"

spotbugs {
    ignoreFailures = false // Fail early
    reportLevel = 'low'
    effort = 'max'
    excludeFilter = file("$configDir/spotbugs-filter.xml")
    maxHeapSize = '512m'
}

gradle.taskGraph.beforeTask { task ->
    if (task.name.toLowerCase().contains('spotbugs')) {
        task.reports {
            html {
                enabled true
                setDestination new File("$reportsDir/spotbugs/spotbugs.html")
            }
            xml {
                enabled false
                setDestination new File("$reportsDir/spotbugs/spotbugs.xml")
            }
        }
    }
}
