/**
 * ************************************************************************************
 *  Copyright (c) 2011 Norbert Nagold <norbert.nagold@gmail.com>                         *
 *                                                                                       *
 *  This program is free software; you can redistribute it and/or modify it under        *
 *  the terms of the GNU General Public License as published by the Free Software        *
 *  Foundation; either version 3 of the License, or (at your option) any later           *
 *  version.                                                                             *
 *                                                                                       *
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY      *
 *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A      *
 *  PARTICULAR PURPOSE. See the GNU General Public License for more details.             *
 *                                                                                       *
 *  You should have received a copy of the GNU General Public License along with         *
 *  this program.  If not, see <http://www.gnu.org/licenses/>.                           *
 * **************************************************************************************
 */
package com.ichi2.anki;

import android.content.SharedPreferences;
import com.ichi2.compat.CompatHelper;
import com.ichi2.libanki.Collection;
import com.ichi2.libanki.Utils;
import com.ichi2.libanki.utils.Time;
import com.ichi2.utils.FileUtil;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.Locale;
import java.util.UnknownFormatConversionException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import androidx.annotation.NonNull;
import timber.log.Timber;
import br.ufmg.labsoft.mutvariants.listeners.ListenerUtil;

public class BackupManager {

    private static final int MIN_FREE_SPACE = 10;

    // threshold in bytes to backup a col file
    private static final int MIN_BACKUP_COL_SIZE = 10000;

    private static final String BACKUP_SUFFIX = "backup";

    public static final String BROKEN_DECKS_SUFFIX = "broken";

    /**
     * Number of hours after which a backup new backup is created
     */
    private static final int BACKUP_INTERVAL = 5;

    /* Prevent class from being instantiated */
    private BackupManager() {
    }

    public static boolean isActivated() {
        return true;
    }

    private static File getBackupDirectory(File ankidroidDir) {
        File directory = new File(ankidroidDir, BACKUP_SUFFIX);
        if (!ListenerUtil.mutListener.listen(5935)) {
            if ((ListenerUtil.mutListener.listen(5933) ? (!directory.isDirectory() || !directory.mkdirs()) : (!directory.isDirectory() && !directory.mkdirs()))) {
                if (!ListenerUtil.mutListener.listen(5934)) {
                    Timber.w("getBackupDirectory() mkdirs on %s failed", ankidroidDir);
                }
            }
        }
        return directory;
    }

    private static File getBrokenDirectory(File ankidroidDir) {
        File directory = new File(ankidroidDir, BROKEN_DECKS_SUFFIX);
        if (!ListenerUtil.mutListener.listen(5938)) {
            if ((ListenerUtil.mutListener.listen(5936) ? (!directory.isDirectory() || !directory.mkdirs()) : (!directory.isDirectory() && !directory.mkdirs()))) {
                if (!ListenerUtil.mutListener.listen(5937)) {
                    Timber.w("getBrokenDirectory() mkdirs on %s failed", ankidroidDir);
                }
            }
        }
        return directory;
    }

    public static boolean performBackupInBackground(String path, @NonNull Time time) {
        return performBackupInBackground(path, BACKUP_INTERVAL, false, time);
    }

    public static boolean performBackupInBackground(String path, boolean force, @NonNull Time time) {
        return performBackupInBackground(path, BACKUP_INTERVAL, force, time);
    }

    @SuppressWarnings("PMD.NPathComplexity")
    private static boolean performBackupInBackground(final String colPath, int interval, boolean force, @NonNull Time time) {
        SharedPreferences prefs = AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance().getBaseContext());
        if (!ListenerUtil.mutListener.listen(5941)) {
            if ((ListenerUtil.mutListener.listen(5939) ? (prefs.getInt("backupMax", 8) == 0 || !force) : (prefs.getInt("backupMax", 8) == 0 && !force))) {
                if (!ListenerUtil.mutListener.listen(5940)) {
                    Timber.w("backups are disabled");
                }
                return false;
            }
        }
        final File colFile = new File(colPath);
        File[] deckBackups = getBackups(colFile);
        int len = deckBackups.length;
        if (!ListenerUtil.mutListener.listen(5958)) {
            if ((ListenerUtil.mutListener.listen(5956) ? ((ListenerUtil.mutListener.listen(5946) ? (len >= 0) : (ListenerUtil.mutListener.listen(5945) ? (len <= 0) : (ListenerUtil.mutListener.listen(5944) ? (len < 0) : (ListenerUtil.mutListener.listen(5943) ? (len != 0) : (ListenerUtil.mutListener.listen(5942) ? (len == 0) : (len > 0)))))) || (ListenerUtil.mutListener.listen(5955) ? (deckBackups[(ListenerUtil.mutListener.listen(5950) ? (len % 1) : (ListenerUtil.mutListener.listen(5949) ? (len / 1) : (ListenerUtil.mutListener.listen(5948) ? (len * 1) : (ListenerUtil.mutListener.listen(5947) ? (len + 1) : (len - 1)))))].lastModified() >= colFile.lastModified()) : (ListenerUtil.mutListener.listen(5954) ? (deckBackups[(ListenerUtil.mutListener.listen(5950) ? (len % 1) : (ListenerUtil.mutListener.listen(5949) ? (len / 1) : (ListenerUtil.mutListener.listen(5948) ? (len * 1) : (ListenerUtil.mutListener.listen(5947) ? (len + 1) : (len - 1)))))].lastModified() <= colFile.lastModified()) : (ListenerUtil.mutListener.listen(5953) ? (deckBackups[(ListenerUtil.mutListener.listen(5950) ? (len % 1) : (ListenerUtil.mutListener.listen(5949) ? (len / 1) : (ListenerUtil.mutListener.listen(5948) ? (len * 1) : (ListenerUtil.mutListener.listen(5947) ? (len + 1) : (len - 1)))))].lastModified() > colFile.lastModified()) : (ListenerUtil.mutListener.listen(5952) ? (deckBackups[(ListenerUtil.mutListener.listen(5950) ? (len % 1) : (ListenerUtil.mutListener.listen(5949) ? (len / 1) : (ListenerUtil.mutListener.listen(5948) ? (len * 1) : (ListenerUtil.mutListener.listen(5947) ? (len + 1) : (len - 1)))))].lastModified() < colFile.lastModified()) : (ListenerUtil.mutListener.listen(5951) ? (deckBackups[(ListenerUtil.mutListener.listen(5950) ? (len % 1) : (ListenerUtil.mutListener.listen(5949) ? (len / 1) : (ListenerUtil.mutListener.listen(5948) ? (len * 1) : (ListenerUtil.mutListener.listen(5947) ? (len + 1) : (len - 1)))))].lastModified() != colFile.lastModified()) : (deckBackups[(ListenerUtil.mutListener.listen(5950) ? (len % 1) : (ListenerUtil.mutListener.listen(5949) ? (len / 1) : (ListenerUtil.mutListener.listen(5948) ? (len * 1) : (ListenerUtil.mutListener.listen(5947) ? (len + 1) : (len - 1)))))].lastModified() == colFile.lastModified()))))))) : ((ListenerUtil.mutListener.listen(5946) ? (len >= 0) : (ListenerUtil.mutListener.listen(5945) ? (len <= 0) : (ListenerUtil.mutListener.listen(5944) ? (len < 0) : (ListenerUtil.mutListener.listen(5943) ? (len != 0) : (ListenerUtil.mutListener.listen(5942) ? (len == 0) : (len > 0)))))) && (ListenerUtil.mutListener.listen(5955) ? (deckBackups[(ListenerUtil.mutListener.listen(5950) ? (len % 1) : (ListenerUtil.mutListener.listen(5949) ? (len / 1) : (ListenerUtil.mutListener.listen(5948) ? (len * 1) : (ListenerUtil.mutListener.listen(5947) ? (len + 1) : (len - 1)))))].lastModified() >= colFile.lastModified()) : (ListenerUtil.mutListener.listen(5954) ? (deckBackups[(ListenerUtil.mutListener.listen(5950) ? (len % 1) : (ListenerUtil.mutListener.listen(5949) ? (len / 1) : (ListenerUtil.mutListener.listen(5948) ? (len * 1) : (ListenerUtil.mutListener.listen(5947) ? (len + 1) : (len - 1)))))].lastModified() <= colFile.lastModified()) : (ListenerUtil.mutListener.listen(5953) ? (deckBackups[(ListenerUtil.mutListener.listen(5950) ? (len % 1) : (ListenerUtil.mutListener.listen(5949) ? (len / 1) : (ListenerUtil.mutListener.listen(5948) ? (len * 1) : (ListenerUtil.mutListener.listen(5947) ? (len + 1) : (len - 1)))))].lastModified() > colFile.lastModified()) : (ListenerUtil.mutListener.listen(5952) ? (deckBackups[(ListenerUtil.mutListener.listen(5950) ? (len % 1) : (ListenerUtil.mutListener.listen(5949) ? (len / 1) : (ListenerUtil.mutListener.listen(5948) ? (len * 1) : (ListenerUtil.mutListener.listen(5947) ? (len + 1) : (len - 1)))))].lastModified() < colFile.lastModified()) : (ListenerUtil.mutListener.listen(5951) ? (deckBackups[(ListenerUtil.mutListener.listen(5950) ? (len % 1) : (ListenerUtil.mutListener.listen(5949) ? (len / 1) : (ListenerUtil.mutListener.listen(5948) ? (len * 1) : (ListenerUtil.mutListener.listen(5947) ? (len + 1) : (len - 1)))))].lastModified() != colFile.lastModified()) : (deckBackups[(ListenerUtil.mutListener.listen(5950) ? (len % 1) : (ListenerUtil.mutListener.listen(5949) ? (len / 1) : (ListenerUtil.mutListener.listen(5948) ? (len * 1) : (ListenerUtil.mutListener.listen(5947) ? (len + 1) : (len - 1)))))].lastModified() == colFile.lastModified()))))))))) {
                if (!ListenerUtil.mutListener.listen(5957)) {
                    Timber.d("performBackup: No backup necessary due to no collection changes");
                }
                return false;
            }
        }
        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd-HH-mm", Locale.US);
        Calendar cal = time.gregorianCalendar();
        // Abort backup if one was already made less than 5 hours ago
        Date lastBackupDate = null;
        if (!ListenerUtil.mutListener.listen(5968)) {
            {
                long _loopCounter107 = 0;
                while ((ListenerUtil.mutListener.listen(5967) ? (lastBackupDate == null || (ListenerUtil.mutListener.listen(5966) ? (len >= 0) : (ListenerUtil.mutListener.listen(5965) ? (len <= 0) : (ListenerUtil.mutListener.listen(5964) ? (len < 0) : (ListenerUtil.mutListener.listen(5963) ? (len != 0) : (ListenerUtil.mutListener.listen(5962) ? (len == 0) : (len > 0))))))) : (lastBackupDate == null && (ListenerUtil.mutListener.listen(5966) ? (len >= 0) : (ListenerUtil.mutListener.listen(5965) ? (len <= 0) : (ListenerUtil.mutListener.listen(5964) ? (len < 0) : (ListenerUtil.mutListener.listen(5963) ? (len != 0) : (ListenerUtil.mutListener.listen(5962) ? (len == 0) : (len > 0))))))))) {
                    ListenerUtil.loopListener.listen("_loopCounter107", ++_loopCounter107);
                    try {
                        if (!ListenerUtil.mutListener.listen(5960)) {
                            len--;
                        }
                        if (!ListenerUtil.mutListener.listen(5961)) {
                            lastBackupDate = df.parse(deckBackups[len].getName().replaceAll("^.*-(\\d{4}-\\d{2}-\\d{2}-\\d{2}-\\d{2}).colpkg$", "$1"));
                        }
                    } catch (ParseException e) {
                        if (!ListenerUtil.mutListener.listen(5959)) {
                            lastBackupDate = null;
                        }
                    }
                }
            }
        }
        if (!ListenerUtil.mutListener.listen(5985)) {
            if ((ListenerUtil.mutListener.listen(5983) ? ((ListenerUtil.mutListener.listen(5982) ? (lastBackupDate != null || (ListenerUtil.mutListener.listen(5981) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) >= time.intTimeMS()) : (ListenerUtil.mutListener.listen(5980) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) <= time.intTimeMS()) : (ListenerUtil.mutListener.listen(5979) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) < time.intTimeMS()) : (ListenerUtil.mutListener.listen(5978) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) != time.intTimeMS()) : (ListenerUtil.mutListener.listen(5977) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) == time.intTimeMS()) : ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) > time.intTimeMS()))))))) : (lastBackupDate != null && (ListenerUtil.mutListener.listen(5981) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) >= time.intTimeMS()) : (ListenerUtil.mutListener.listen(5980) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) <= time.intTimeMS()) : (ListenerUtil.mutListener.listen(5979) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) < time.intTimeMS()) : (ListenerUtil.mutListener.listen(5978) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) != time.intTimeMS()) : (ListenerUtil.mutListener.listen(5977) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) == time.intTimeMS()) : ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) > time.intTimeMS())))))))) || !force) : ((ListenerUtil.mutListener.listen(5982) ? (lastBackupDate != null || (ListenerUtil.mutListener.listen(5981) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) >= time.intTimeMS()) : (ListenerUtil.mutListener.listen(5980) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) <= time.intTimeMS()) : (ListenerUtil.mutListener.listen(5979) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) < time.intTimeMS()) : (ListenerUtil.mutListener.listen(5978) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) != time.intTimeMS()) : (ListenerUtil.mutListener.listen(5977) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) == time.intTimeMS()) : ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) > time.intTimeMS()))))))) : (lastBackupDate != null && (ListenerUtil.mutListener.listen(5981) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) >= time.intTimeMS()) : (ListenerUtil.mutListener.listen(5980) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) <= time.intTimeMS()) : (ListenerUtil.mutListener.listen(5979) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) < time.intTimeMS()) : (ListenerUtil.mutListener.listen(5978) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) != time.intTimeMS()) : (ListenerUtil.mutListener.listen(5977) ? ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) == time.intTimeMS()) : ((ListenerUtil.mutListener.listen(5976) ? (lastBackupDate.getTime() % (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5975) ? (lastBackupDate.getTime() / (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5974) ? (lastBackupDate.getTime() * (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (ListenerUtil.mutListener.listen(5973) ? (lastBackupDate.getTime() - (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))) : (lastBackupDate.getTime() + (ListenerUtil.mutListener.listen(5972) ? (interval % 3600000L) : (ListenerUtil.mutListener.listen(5971) ? (interval / 3600000L) : (ListenerUtil.mutListener.listen(5970) ? (interval - 3600000L) : (ListenerUtil.mutListener.listen(5969) ? (interval + 3600000L) : (interval * 3600000L)))))))))) > time.intTimeMS())))))))) && !force))) {
                if (!ListenerUtil.mutListener.listen(5984)) {
                    Timber.d("performBackup: No backup created. Last backup younger than 5 hours");
                }
                return false;
            }
        }
        String backupFilename;
        try {
            backupFilename = String.format(Utils.ENGLISH_LOCALE, colFile.getName().replace(".anki2", "") + "-%s.colpkg", df.format(cal.getTime()));
        } catch (UnknownFormatConversionException e) {
            if (!ListenerUtil.mutListener.listen(5986)) {
                Timber.e(e, "performBackup: error on creating backup filename");
            }
            return false;
        }
        // Abort backup if destination already exists (extremely unlikely)
        final File backupFile = new File(getBackupDirectory(colFile.getParentFile()), backupFilename);
        if (!ListenerUtil.mutListener.listen(5988)) {
            if (backupFile.exists()) {
                if (!ListenerUtil.mutListener.listen(5987)) {
                    Timber.d("performBackup: No new backup created. File already exists");
                }
                return false;
            }
        }
        if (!ListenerUtil.mutListener.listen(6008)) {
            // Abort backup if not enough free space
            if ((ListenerUtil.mutListener.listen(6005) ? (getFreeDiscSpace(colFile) >= (ListenerUtil.mutListener.listen(6000) ? (colFile.length() % ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5999) ? (colFile.length() / ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5998) ? (colFile.length() * ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5997) ? (colFile.length() - ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (colFile.length() + ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024)))))))))))) : (ListenerUtil.mutListener.listen(6004) ? (getFreeDiscSpace(colFile) <= (ListenerUtil.mutListener.listen(6000) ? (colFile.length() % ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5999) ? (colFile.length() / ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5998) ? (colFile.length() * ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5997) ? (colFile.length() - ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (colFile.length() + ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024)))))))))))) : (ListenerUtil.mutListener.listen(6003) ? (getFreeDiscSpace(colFile) > (ListenerUtil.mutListener.listen(6000) ? (colFile.length() % ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5999) ? (colFile.length() / ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5998) ? (colFile.length() * ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5997) ? (colFile.length() - ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (colFile.length() + ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024)))))))))))) : (ListenerUtil.mutListener.listen(6002) ? (getFreeDiscSpace(colFile) != (ListenerUtil.mutListener.listen(6000) ? (colFile.length() % ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5999) ? (colFile.length() / ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5998) ? (colFile.length() * ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5997) ? (colFile.length() - ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (colFile.length() + ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024)))))))))))) : (ListenerUtil.mutListener.listen(6001) ? (getFreeDiscSpace(colFile) == (ListenerUtil.mutListener.listen(6000) ? (colFile.length() % ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5999) ? (colFile.length() / ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5998) ? (colFile.length() * ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5997) ? (colFile.length() - ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (colFile.length() + ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024)))))))))))) : (getFreeDiscSpace(colFile) < (ListenerUtil.mutListener.listen(6000) ? (colFile.length() % ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5999) ? (colFile.length() / ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5998) ? (colFile.length() * ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(5997) ? (colFile.length() - ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (colFile.length() + ((ListenerUtil.mutListener.listen(5996) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(5995) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(5994) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(5993) ? ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(5992) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(5991) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(5990) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(5989) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024)))))))))))))))))) {
                if (!ListenerUtil.mutListener.listen(6006)) {
                    Timber.e("performBackup: Not enough space on sd card to backup.");
                }
                if (!ListenerUtil.mutListener.listen(6007)) {
                    prefs.edit().putBoolean("noSpaceLeft", true).apply();
                }
                return false;
            }
        }
        if (!ListenerUtil.mutListener.listen(6015)) {
            // Don't bother trying to do backup if the collection is too small to be valid
            if ((ListenerUtil.mutListener.listen(6013) ? (colFile.length() >= MIN_BACKUP_COL_SIZE) : (ListenerUtil.mutListener.listen(6012) ? (colFile.length() <= MIN_BACKUP_COL_SIZE) : (ListenerUtil.mutListener.listen(6011) ? (colFile.length() > MIN_BACKUP_COL_SIZE) : (ListenerUtil.mutListener.listen(6010) ? (colFile.length() != MIN_BACKUP_COL_SIZE) : (ListenerUtil.mutListener.listen(6009) ? (colFile.length() == MIN_BACKUP_COL_SIZE) : (colFile.length() < MIN_BACKUP_COL_SIZE))))))) {
                if (!ListenerUtil.mutListener.listen(6014)) {
                    Timber.d("performBackup: No backup created as the collection is too small to be valid");
                }
                return false;
            }
        }
        if (!ListenerUtil.mutListener.listen(6017)) {
            // TODO: Probably not a good idea to do the backup while the collection is open
            if (CollectionHelper.getInstance().colIsOpen()) {
                if (!ListenerUtil.mutListener.listen(6016)) {
                    Timber.w("Collection is already open during backup... we probably shouldn't be doing this");
                }
            }
        }
        if (!ListenerUtil.mutListener.listen(6018)) {
            Timber.i("Launching new thread to backup %s to %s", colPath, backupFile.getPath());
        }
        // Backup collection as Anki package in new thread
        Thread thread = new Thread() {

            @Override
            public void run() {
                // Save collection file as zip archive
                try {
                    ZipOutputStream zos = new ZipOutputStream(new BufferedOutputStream(new FileOutputStream(backupFile)));
                    ZipEntry ze = new ZipEntry(CollectionHelper.COLLECTION_FILENAME);
                    if (!ListenerUtil.mutListener.listen(6020)) {
                        zos.putNextEntry(ze);
                    }
                    if (!ListenerUtil.mutListener.listen(6021)) {
                        CompatHelper.getCompat().copyFile(colPath, zos);
                    }
                    if (!ListenerUtil.mutListener.listen(6022)) {
                        zos.close();
                    }
                    // Delete old backup files if needed
                    SharedPreferences prefs = AnkiDroidApp.getSharedPrefs(AnkiDroidApp.getInstance().getBaseContext());
                    if (!ListenerUtil.mutListener.listen(6023)) {
                        deleteDeckBackups(colPath, prefs.getInt("backupMax", 8));
                    }
                    if (!ListenerUtil.mutListener.listen(6025)) {
                        // set timestamp of file in order to avoid creating a new backup unless its changed
                        if (!backupFile.setLastModified(colFile.lastModified())) {
                            if (!ListenerUtil.mutListener.listen(6024)) {
                                Timber.w("performBackupInBackground() setLastModified() failed on file %s", backupFilename);
                            }
                        }
                    }
                    if (!ListenerUtil.mutListener.listen(6026)) {
                        Timber.i("Backup created succesfully");
                    }
                } catch (IOException e) {
                    if (!ListenerUtil.mutListener.listen(6019)) {
                        e.printStackTrace();
                    }
                }
            }
        };
        if (!ListenerUtil.mutListener.listen(6027)) {
            thread.start();
        }
        return true;
    }

    public static boolean enoughDiscSpace(String path) {
        return (ListenerUtil.mutListener.listen(6040) ? (getFreeDiscSpace(path) <= ((ListenerUtil.mutListener.listen(6035) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(6034) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(6033) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(6032) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(6039) ? (getFreeDiscSpace(path) > ((ListenerUtil.mutListener.listen(6035) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(6034) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(6033) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(6032) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(6038) ? (getFreeDiscSpace(path) < ((ListenerUtil.mutListener.listen(6035) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(6034) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(6033) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(6032) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(6037) ? (getFreeDiscSpace(path) != ((ListenerUtil.mutListener.listen(6035) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(6034) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(6033) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(6032) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (ListenerUtil.mutListener.listen(6036) ? (getFreeDiscSpace(path) == ((ListenerUtil.mutListener.listen(6035) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(6034) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(6033) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(6032) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))) : (getFreeDiscSpace(path) >= ((ListenerUtil.mutListener.listen(6035) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(6034) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(6033) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(6032) ? ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(6031) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6030) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6029) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6028) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))))))))));
    }

    /**
     * Get free disc space in bytes from path to Collection
     */
    public static long getFreeDiscSpace(String path) {
        return getFreeDiscSpace(new File(path));
    }

    private static long getFreeDiscSpace(File file) {
        return FileUtil.getFreeDiskSpace(file, (ListenerUtil.mutListener.listen(6048) ? ((ListenerUtil.mutListener.listen(6044) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6043) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6042) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6041) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) % 1024) : (ListenerUtil.mutListener.listen(6047) ? ((ListenerUtil.mutListener.listen(6044) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6043) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6042) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6041) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) / 1024) : (ListenerUtil.mutListener.listen(6046) ? ((ListenerUtil.mutListener.listen(6044) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6043) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6042) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6041) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) - 1024) : (ListenerUtil.mutListener.listen(6045) ? ((ListenerUtil.mutListener.listen(6044) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6043) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6042) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6041) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) + 1024) : ((ListenerUtil.mutListener.listen(6044) ? (MIN_FREE_SPACE % 1024) : (ListenerUtil.mutListener.listen(6043) ? (MIN_FREE_SPACE / 1024) : (ListenerUtil.mutListener.listen(6042) ? (MIN_FREE_SPACE - 1024) : (ListenerUtil.mutListener.listen(6041) ? (MIN_FREE_SPACE + 1024) : (MIN_FREE_SPACE * 1024))))) * 1024))))));
    }

    /**
     * Run the sqlite3 command-line-tool (if it exists) on the collection to dump to a text file
     * and reload as a new database. Recently this command line tool isn't available on many devices
     *
     * @param col Collection
     * @return whether the repair was successful
     */
    public static boolean repairCollection(Collection col) {
        String deckPath = col.getPath();
        File deckFile = new File(deckPath);
        Time time = col.getTime();
        if (!ListenerUtil.mutListener.listen(6049)) {
            Timber.i("BackupManager - RepairCollection - Closing Collection");
        }
        if (!ListenerUtil.mutListener.listen(6050)) {
            col.close();
        }
        // repair file
        String execString = "sqlite3 " + deckPath + " .dump | sqlite3 " + deckPath + ".tmp";
        if (!ListenerUtil.mutListener.listen(6051)) {
            Timber.i("repairCollection - Execute: %s", execString);
        }
        try {
            String[] cmd = { "/system/bin/sh", "-c", execString };
            Process process = Runtime.getRuntime().exec(cmd);
            if (!ListenerUtil.mutListener.listen(6053)) {
                process.waitFor();
            }
            if (!ListenerUtil.mutListener.listen(6055)) {
                if (!new File(deckPath + ".tmp").exists()) {
                    if (!ListenerUtil.mutListener.listen(6054)) {
                        Timber.e("repairCollection - dump to %s.tmp failed", deckPath);
                    }
                    return false;
                }
            }
            if (!ListenerUtil.mutListener.listen(6057)) {
                if (!moveDatabaseToBrokenFolder(deckPath, false, time)) {
                    if (!ListenerUtil.mutListener.listen(6056)) {
                        Timber.e("repairCollection - could not move corrupt file to broken folder");
                    }
                    return false;
                }
            }
            if (!ListenerUtil.mutListener.listen(6058)) {
                Timber.i("repairCollection - moved corrupt file to broken folder");
            }
            File repairedFile = new File(deckPath + ".tmp");
            return repairedFile.renameTo(deckFile);
        } catch (IOException | InterruptedException e) {
            if (!ListenerUtil.mutListener.listen(6052)) {
                Timber.e(e, "repairCollection - error");
            }
        }
        return false;
    }

    public static boolean moveDatabaseToBrokenFolder(String colPath, boolean moveConnectedFilesToo, Time time) {
        File colFile = new File(colPath);
        // move file
        Date value = time.genToday(Time.utcOffset());
        String movedFilename = String.format(Utils.ENGLISH_LOCALE, colFile.getName().replace(".anki2", "") + "-corrupt-%tF.anki2", value);
        File movedFile = new File(getBrokenDirectory(colFile.getParentFile()), movedFilename);
        int i = 1;
        if (!ListenerUtil.mutListener.listen(6061)) {
            {
                long _loopCounter108 = 0;
                while (movedFile.exists()) {
                    ListenerUtil.loopListener.listen("_loopCounter108", ++_loopCounter108);
                    if (!ListenerUtil.mutListener.listen(6059)) {
                        movedFile = new File(getBrokenDirectory(colFile.getParentFile()), movedFilename.replace(".anki2", "-" + i + ".anki2"));
                    }
                    if (!ListenerUtil.mutListener.listen(6060)) {
                        i++;
                    }
                }
            }
        }
        if (!ListenerUtil.mutListener.listen(6062)) {
            movedFilename = movedFile.getName();
        }
        if (!ListenerUtil.mutListener.listen(6063)) {
            if (!colFile.renameTo(movedFile)) {
                return false;
            }
        }
        if (!ListenerUtil.mutListener.listen(6067)) {
            if (moveConnectedFilesToo) {
                // move all connected files (like journals, directories...) too
                String deckName = colFile.getName();
                File directory = new File(colFile.getParent());
                if (!ListenerUtil.mutListener.listen(6066)) {
                    {
                        long _loopCounter109 = 0;
                        for (File f : directory.listFiles()) {
                            ListenerUtil.loopListener.listen("_loopCounter109", ++_loopCounter109);
                            if (!ListenerUtil.mutListener.listen(6065)) {
                                if ((ListenerUtil.mutListener.listen(6064) ? (f.getName().startsWith(deckName) || !f.renameTo(new File(getBrokenDirectory(colFile.getParentFile()), f.getName().replace(deckName, movedFilename)))) : (f.getName().startsWith(deckName) && !f.renameTo(new File(getBrokenDirectory(colFile.getParentFile()), f.getName().replace(deckName, movedFilename)))))) {
                                    return false;
                                }
                            }
                        }
                    }
                }
            }
        }
        return true;
    }

    public static File[] getBackups(File colFile) {
        File[] files = getBackupDirectory(colFile.getParentFile()).listFiles();
        if (!ListenerUtil.mutListener.listen(6069)) {
            if (files == null) {
                if (!ListenerUtil.mutListener.listen(6068)) {
                    files = new File[0];
                }
            }
        }
        ArrayList<File> deckBackups = new ArrayList<>(files.length);
        if (!ListenerUtil.mutListener.listen(6072)) {
            {
                long _loopCounter110 = 0;
                for (File aktFile : files) {
                    ListenerUtil.loopListener.listen("_loopCounter110", ++_loopCounter110);
                    if (!ListenerUtil.mutListener.listen(6071)) {
                        if (aktFile.getName().replaceAll("^(.*)-\\d{4}-\\d{2}-\\d{2}-\\d{2}-\\d{2}.(apkg|colpkg)$", "$1").equals(colFile.getName().replace(".anki2", ""))) {
                            if (!ListenerUtil.mutListener.listen(6070)) {
                                deckBackups.add(aktFile);
                            }
                        }
                    }
                }
            }
        }
        if (!ListenerUtil.mutListener.listen(6073)) {
            Collections.sort(deckBackups);
        }
        File[] fileList = new File[deckBackups.size()];
        if (!ListenerUtil.mutListener.listen(6074)) {
            deckBackups.toArray(fileList);
        }
        return fileList;
    }

    private static boolean deleteDeckBackups(String colFile, int keepNumber) {
        return deleteDeckBackups(getBackups(new File(colFile)), keepNumber);
    }

    private static boolean deleteDeckBackups(File[] backups, int keepNumber) {
        if (!ListenerUtil.mutListener.listen(6075)) {
            if (backups == null) {
                return false;
            }
        }
        if (!ListenerUtil.mutListener.listen(6088)) {
            {
                long _loopCounter111 = 0;
                for (int i = 0; (ListenerUtil.mutListener.listen(6087) ? (i >= (ListenerUtil.mutListener.listen(6082) ? (backups.length % keepNumber) : (ListenerUtil.mutListener.listen(6081) ? (backups.length / keepNumber) : (ListenerUtil.mutListener.listen(6080) ? (backups.length * keepNumber) : (ListenerUtil.mutListener.listen(6079) ? (backups.length + keepNumber) : (backups.length - keepNumber)))))) : (ListenerUtil.mutListener.listen(6086) ? (i <= (ListenerUtil.mutListener.listen(6082) ? (backups.length % keepNumber) : (ListenerUtil.mutListener.listen(6081) ? (backups.length / keepNumber) : (ListenerUtil.mutListener.listen(6080) ? (backups.length * keepNumber) : (ListenerUtil.mutListener.listen(6079) ? (backups.length + keepNumber) : (backups.length - keepNumber)))))) : (ListenerUtil.mutListener.listen(6085) ? (i > (ListenerUtil.mutListener.listen(6082) ? (backups.length % keepNumber) : (ListenerUtil.mutListener.listen(6081) ? (backups.length / keepNumber) : (ListenerUtil.mutListener.listen(6080) ? (backups.length * keepNumber) : (ListenerUtil.mutListener.listen(6079) ? (backups.length + keepNumber) : (backups.length - keepNumber)))))) : (ListenerUtil.mutListener.listen(6084) ? (i != (ListenerUtil.mutListener.listen(6082) ? (backups.length % keepNumber) : (ListenerUtil.mutListener.listen(6081) ? (backups.length / keepNumber) : (ListenerUtil.mutListener.listen(6080) ? (backups.length * keepNumber) : (ListenerUtil.mutListener.listen(6079) ? (backups.length + keepNumber) : (backups.length - keepNumber)))))) : (ListenerUtil.mutListener.listen(6083) ? (i == (ListenerUtil.mutListener.listen(6082) ? (backups.length % keepNumber) : (ListenerUtil.mutListener.listen(6081) ? (backups.length / keepNumber) : (ListenerUtil.mutListener.listen(6080) ? (backups.length * keepNumber) : (ListenerUtil.mutListener.listen(6079) ? (backups.length + keepNumber) : (backups.length - keepNumber)))))) : (i < (ListenerUtil.mutListener.listen(6082) ? (backups.length % keepNumber) : (ListenerUtil.mutListener.listen(6081) ? (backups.length / keepNumber) : (ListenerUtil.mutListener.listen(6080) ? (backups.length * keepNumber) : (ListenerUtil.mutListener.listen(6079) ? (backups.length + keepNumber) : (backups.length - keepNumber))))))))))); i++) {
                    ListenerUtil.loopListener.listen("_loopCounter111", ++_loopCounter111);
                    if (!ListenerUtil.mutListener.listen(6078)) {
                        if (!backups[i].delete()) {
                            if (!ListenerUtil.mutListener.listen(6077)) {
                                Timber.e("deleteDeckBackups() failed to delete %s", backups[i].getAbsolutePath());
                            }
                        } else {
                            if (!ListenerUtil.mutListener.listen(6076)) {
                                Timber.i("deleteDeckBackups: backup file %s deleted.", backups[i].getAbsolutePath());
                            }
                        }
                    }
                }
            }
        }
        return true;
    }

    public static boolean removeDir(File dir) {
        if (!ListenerUtil.mutListener.listen(6091)) {
            if (dir.isDirectory()) {
                File[] files = dir.listFiles();
                if (!ListenerUtil.mutListener.listen(6090)) {
                    {
                        long _loopCounter112 = 0;
                        for (File aktFile : files) {
                            ListenerUtil.loopListener.listen("_loopCounter112", ++_loopCounter112);
                            if (!ListenerUtil.mutListener.listen(6089)) {
                                removeDir(aktFile);
                            }
                        }
                    }
                }
            }
        }
        return dir.delete();
    }
}
