# Nodes with values to reuse in the pipeline.
common_params:
  # Common plugin settings to use with the `plugins` key.
  - &common_plugins
    - automattic/bash-cache#2.1.0

steps:
  - label: "checkstyle"
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew checkstyle
    plugins: *common_plugins
    artifact_paths:
      - "**/build/reports/checkstyle/checkstyle.*"

  - label: "ktlint"
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew ciktlint
    plugins: *common_plugins
    artifact_paths:
      - "**/build/ktlint.xml"

  - label: "detekt"
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew WordPress:detekt
    plugins: *common_plugins
    artifact_paths:
      - "**/build/reports/detekt/detekt.html"

  - label: "lint"
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew lintWordpressVanillaRelease
    plugins: *common_plugins
    artifact_paths:
      - "**/build/reports/lint-results*.*"

  - label: "Test WordPress"
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew testWordpressVanillaRelease
    plugins: *common_plugins

  - label: "Test Processors"
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew :libs:processors:test
    plugins: *common_plugins

  - label: "Test Image Editor"
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew :libs:image-editor:test
    plugins: *common_plugins

  - label: "ðŸ›  WordPress Installable Build"
    command: ".buildkite/commands/wordpress-installable-build.sh"
    if: build.pull_request.id != null
    plugins: *common_plugins

  - label: "ðŸ›  Jetpack Installable Build"
    command: ".buildkite/commands/jetpack-installable-build.sh"
    if: build.pull_request.id != null
    plugins: *common_plugins
