/**
 * *************************************************************************************
 *  Copyright (c) 2014 Michael Goldbach <michael@wildplot.com>                           *
 *                                                                                       *
 *  This program is free software; you can redistribute it and/or modify it under        *
 *  the terms of the GNU General Public License as published by the Free Software        *
 *  Foundation; either version 3 of the License, or (at your option) any later           *
 *  version.                                                                             *
 *                                                                                       *
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY      *
 *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A      *
 *  PARTICULAR PURPOSE. See the GNU General Public License for more details.             *
 *                                                                                       *
 *  You should have received a copy of the GNU General Public License along with         *
 *  this program.  If not, see <http://www.gnu.org/licenses/>.                           *
 * **************************************************************************************
 */
package com.wildplot.android.parsing.AtomTypes;

import com.wildplot.android.parsing.*;
import java.util.regex.Pattern;
import br.ufmg.labsoft.mutvariants.listeners.ListenerUtil;

/**
 * @author Michael Goldbach
 */
public class FunctionXYAtom implements TreeElement {

    private Atom.AtomType atomType = Atom.AtomType.FUNCTION_X;

    private final TopLevelParser parser;

    private Expression expressionLeft;

    private Expression expressionRight;

    private String funcName;

    public FunctionXYAtom(String funcString, TopLevelParser parser) {
        this.parser = parser;
        boolean isValid = init(funcString);
        if (!ListenerUtil.mutListener.listen(26344)) {
            if (!isValid) {
                if (!ListenerUtil.mutListener.listen(26343)) {
                    this.atomType = Atom.AtomType.INVALID;
                }
            }
        }
    }

    private boolean init(String funcString) {
        int leftBracket = funcString.indexOf("(");
        int rightBracket = funcString.lastIndexOf(")");
        // see if there even is a comma
        int comma = funcString.indexOf(",");
        if (!ListenerUtil.mutListener.listen(26406)) {
            if ((ListenerUtil.mutListener.listen(26371) ? ((ListenerUtil.mutListener.listen(26365) ? ((ListenerUtil.mutListener.listen(26359) ? ((ListenerUtil.mutListener.listen(26349) ? (leftBracket >= 1) : (ListenerUtil.mutListener.listen(26348) ? (leftBracket <= 1) : (ListenerUtil.mutListener.listen(26347) ? (leftBracket < 1) : (ListenerUtil.mutListener.listen(26346) ? (leftBracket != 1) : (ListenerUtil.mutListener.listen(26345) ? (leftBracket == 1) : (leftBracket > 1)))))) || (ListenerUtil.mutListener.listen(26358) ? (rightBracket >= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26357) ? (rightBracket <= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26356) ? (rightBracket < (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26355) ? (rightBracket != (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26354) ? (rightBracket == (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (rightBracket > (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))))))))) : ((ListenerUtil.mutListener.listen(26349) ? (leftBracket >= 1) : (ListenerUtil.mutListener.listen(26348) ? (leftBracket <= 1) : (ListenerUtil.mutListener.listen(26347) ? (leftBracket < 1) : (ListenerUtil.mutListener.listen(26346) ? (leftBracket != 1) : (ListenerUtil.mutListener.listen(26345) ? (leftBracket == 1) : (leftBracket > 1)))))) && (ListenerUtil.mutListener.listen(26358) ? (rightBracket >= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26357) ? (rightBracket <= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26356) ? (rightBracket < (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26355) ? (rightBracket != (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26354) ? (rightBracket == (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (rightBracket > (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1))))))))))))) || (ListenerUtil.mutListener.listen(26364) ? (comma >= leftBracket) : (ListenerUtil.mutListener.listen(26363) ? (comma <= leftBracket) : (ListenerUtil.mutListener.listen(26362) ? (comma < leftBracket) : (ListenerUtil.mutListener.listen(26361) ? (comma != leftBracket) : (ListenerUtil.mutListener.listen(26360) ? (comma == leftBracket) : (comma > leftBracket))))))) : ((ListenerUtil.mutListener.listen(26359) ? ((ListenerUtil.mutListener.listen(26349) ? (leftBracket >= 1) : (ListenerUtil.mutListener.listen(26348) ? (leftBracket <= 1) : (ListenerUtil.mutListener.listen(26347) ? (leftBracket < 1) : (ListenerUtil.mutListener.listen(26346) ? (leftBracket != 1) : (ListenerUtil.mutListener.listen(26345) ? (leftBracket == 1) : (leftBracket > 1)))))) || (ListenerUtil.mutListener.listen(26358) ? (rightBracket >= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26357) ? (rightBracket <= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26356) ? (rightBracket < (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26355) ? (rightBracket != (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26354) ? (rightBracket == (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (rightBracket > (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))))))))) : ((ListenerUtil.mutListener.listen(26349) ? (leftBracket >= 1) : (ListenerUtil.mutListener.listen(26348) ? (leftBracket <= 1) : (ListenerUtil.mutListener.listen(26347) ? (leftBracket < 1) : (ListenerUtil.mutListener.listen(26346) ? (leftBracket != 1) : (ListenerUtil.mutListener.listen(26345) ? (leftBracket == 1) : (leftBracket > 1)))))) && (ListenerUtil.mutListener.listen(26358) ? (rightBracket >= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26357) ? (rightBracket <= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26356) ? (rightBracket < (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26355) ? (rightBracket != (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26354) ? (rightBracket == (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (rightBracket > (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1))))))))))))) && (ListenerUtil.mutListener.listen(26364) ? (comma >= leftBracket) : (ListenerUtil.mutListener.listen(26363) ? (comma <= leftBracket) : (ListenerUtil.mutListener.listen(26362) ? (comma < leftBracket) : (ListenerUtil.mutListener.listen(26361) ? (comma != leftBracket) : (ListenerUtil.mutListener.listen(26360) ? (comma == leftBracket) : (comma > leftBracket)))))))) || (ListenerUtil.mutListener.listen(26370) ? (comma >= rightBracket) : (ListenerUtil.mutListener.listen(26369) ? (comma <= rightBracket) : (ListenerUtil.mutListener.listen(26368) ? (comma > rightBracket) : (ListenerUtil.mutListener.listen(26367) ? (comma != rightBracket) : (ListenerUtil.mutListener.listen(26366) ? (comma == rightBracket) : (comma < rightBracket))))))) : ((ListenerUtil.mutListener.listen(26365) ? ((ListenerUtil.mutListener.listen(26359) ? ((ListenerUtil.mutListener.listen(26349) ? (leftBracket >= 1) : (ListenerUtil.mutListener.listen(26348) ? (leftBracket <= 1) : (ListenerUtil.mutListener.listen(26347) ? (leftBracket < 1) : (ListenerUtil.mutListener.listen(26346) ? (leftBracket != 1) : (ListenerUtil.mutListener.listen(26345) ? (leftBracket == 1) : (leftBracket > 1)))))) || (ListenerUtil.mutListener.listen(26358) ? (rightBracket >= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26357) ? (rightBracket <= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26356) ? (rightBracket < (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26355) ? (rightBracket != (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26354) ? (rightBracket == (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (rightBracket > (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))))))))) : ((ListenerUtil.mutListener.listen(26349) ? (leftBracket >= 1) : (ListenerUtil.mutListener.listen(26348) ? (leftBracket <= 1) : (ListenerUtil.mutListener.listen(26347) ? (leftBracket < 1) : (ListenerUtil.mutListener.listen(26346) ? (leftBracket != 1) : (ListenerUtil.mutListener.listen(26345) ? (leftBracket == 1) : (leftBracket > 1)))))) && (ListenerUtil.mutListener.listen(26358) ? (rightBracket >= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26357) ? (rightBracket <= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26356) ? (rightBracket < (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26355) ? (rightBracket != (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26354) ? (rightBracket == (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (rightBracket > (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1))))))))))))) || (ListenerUtil.mutListener.listen(26364) ? (comma >= leftBracket) : (ListenerUtil.mutListener.listen(26363) ? (comma <= leftBracket) : (ListenerUtil.mutListener.listen(26362) ? (comma < leftBracket) : (ListenerUtil.mutListener.listen(26361) ? (comma != leftBracket) : (ListenerUtil.mutListener.listen(26360) ? (comma == leftBracket) : (comma > leftBracket))))))) : ((ListenerUtil.mutListener.listen(26359) ? ((ListenerUtil.mutListener.listen(26349) ? (leftBracket >= 1) : (ListenerUtil.mutListener.listen(26348) ? (leftBracket <= 1) : (ListenerUtil.mutListener.listen(26347) ? (leftBracket < 1) : (ListenerUtil.mutListener.listen(26346) ? (leftBracket != 1) : (ListenerUtil.mutListener.listen(26345) ? (leftBracket == 1) : (leftBracket > 1)))))) || (ListenerUtil.mutListener.listen(26358) ? (rightBracket >= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26357) ? (rightBracket <= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26356) ? (rightBracket < (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26355) ? (rightBracket != (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26354) ? (rightBracket == (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (rightBracket > (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))))))))) : ((ListenerUtil.mutListener.listen(26349) ? (leftBracket >= 1) : (ListenerUtil.mutListener.listen(26348) ? (leftBracket <= 1) : (ListenerUtil.mutListener.listen(26347) ? (leftBracket < 1) : (ListenerUtil.mutListener.listen(26346) ? (leftBracket != 1) : (ListenerUtil.mutListener.listen(26345) ? (leftBracket == 1) : (leftBracket > 1)))))) && (ListenerUtil.mutListener.listen(26358) ? (rightBracket >= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26357) ? (rightBracket <= (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26356) ? (rightBracket < (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26355) ? (rightBracket != (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (ListenerUtil.mutListener.listen(26354) ? (rightBracket == (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1)))))) : (rightBracket > (ListenerUtil.mutListener.listen(26353) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26352) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26351) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26350) ? (leftBracket - 1) : (leftBracket + 1))))))))))))) && (ListenerUtil.mutListener.listen(26364) ? (comma >= leftBracket) : (ListenerUtil.mutListener.listen(26363) ? (comma <= leftBracket) : (ListenerUtil.mutListener.listen(26362) ? (comma < leftBracket) : (ListenerUtil.mutListener.listen(26361) ? (comma != leftBracket) : (ListenerUtil.mutListener.listen(26360) ? (comma == leftBracket) : (comma > leftBracket)))))))) && (ListenerUtil.mutListener.listen(26370) ? (comma >= rightBracket) : (ListenerUtil.mutListener.listen(26369) ? (comma <= rightBracket) : (ListenerUtil.mutListener.listen(26368) ? (comma > rightBracket) : (ListenerUtil.mutListener.listen(26367) ? (comma != rightBracket) : (ListenerUtil.mutListener.listen(26366) ? (comma == rightBracket) : (comma < rightBracket))))))))) {
                if (!ListenerUtil.mutListener.listen(26405)) {
                    {
                        long _loopCounter703 = 0;
                        // test all commas
                        for (int i = (ListenerUtil.mutListener.listen(26404) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26403) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26402) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26401) ? (leftBracket - 1) : (leftBracket + 1))))); (ListenerUtil.mutListener.listen(26400) ? (i >= rightBracket) : (ListenerUtil.mutListener.listen(26399) ? (i <= rightBracket) : (ListenerUtil.mutListener.listen(26398) ? (i > rightBracket) : (ListenerUtil.mutListener.listen(26397) ? (i != rightBracket) : (ListenerUtil.mutListener.listen(26396) ? (i == rightBracket) : (i < rightBracket)))))); i++) {
                            ListenerUtil.loopListener.listen("_loopCounter703", ++_loopCounter703);
                            if (!ListenerUtil.mutListener.listen(26373)) {
                                if (funcString.charAt(i) == ',') {
                                    if (!ListenerUtil.mutListener.listen(26372)) {
                                        comma = i;
                                    }
                                }
                            }
                            String funcName = funcString.substring(0, leftBracket);
                            Pattern p = Pattern.compile("[^a-zA-Z0-9]");
                            boolean hasSpecialChar = p.matcher(funcName).find();
                            if (!ListenerUtil.mutListener.listen(26395)) {
                                if ((ListenerUtil.mutListener.listen(26379) ? (!hasSpecialChar || ((ListenerUtil.mutListener.listen(26378) ? (funcName.length() >= 0) : (ListenerUtil.mutListener.listen(26377) ? (funcName.length() <= 0) : (ListenerUtil.mutListener.listen(26376) ? (funcName.length() < 0) : (ListenerUtil.mutListener.listen(26375) ? (funcName.length() != 0) : (ListenerUtil.mutListener.listen(26374) ? (funcName.length() == 0) : (funcName.length() > 0)))))))) : (!hasSpecialChar && ((ListenerUtil.mutListener.listen(26378) ? (funcName.length() >= 0) : (ListenerUtil.mutListener.listen(26377) ? (funcName.length() <= 0) : (ListenerUtil.mutListener.listen(26376) ? (funcName.length() < 0) : (ListenerUtil.mutListener.listen(26375) ? (funcName.length() != 0) : (ListenerUtil.mutListener.listen(26374) ? (funcName.length() == 0) : (funcName.length() > 0)))))))))) {
                                    String leftExpressionString = funcString.substring((ListenerUtil.mutListener.listen(26384) ? (leftBracket % 1) : (ListenerUtil.mutListener.listen(26383) ? (leftBracket / 1) : (ListenerUtil.mutListener.listen(26382) ? (leftBracket * 1) : (ListenerUtil.mutListener.listen(26381) ? (leftBracket - 1) : (leftBracket + 1))))), comma);
                                    String rightExpressionString = funcString.substring((ListenerUtil.mutListener.listen(26388) ? (comma % 1) : (ListenerUtil.mutListener.listen(26387) ? (comma / 1) : (ListenerUtil.mutListener.listen(26386) ? (comma * 1) : (ListenerUtil.mutListener.listen(26385) ? (comma - 1) : (comma + 1))))), rightBracket);
                                    Expression leftExpressionInBrackets = new Expression(leftExpressionString, parser);
                                    Expression rightExpressionInBrackets = new Expression(rightExpressionString, parser);
                                    boolean isValidLeftExpression = leftExpressionInBrackets.getExpressionType() != Expression.ExpressionType.INVALID;
                                    boolean isValidRightExpression = rightExpressionInBrackets.getExpressionType() != Expression.ExpressionType.INVALID;
                                    if (!ListenerUtil.mutListener.listen(26394)) {
                                        if ((ListenerUtil.mutListener.listen(26389) ? (isValidLeftExpression || isValidRightExpression) : (isValidLeftExpression && isValidRightExpression))) {
                                            if (!ListenerUtil.mutListener.listen(26390)) {
                                                this.atomType = Atom.AtomType.FUNCTION_X;
                                            }
                                            if (!ListenerUtil.mutListener.listen(26391)) {
                                                this.funcName = funcName;
                                            }
                                            if (!ListenerUtil.mutListener.listen(26392)) {
                                                this.expressionLeft = leftExpressionInBrackets;
                                            }
                                            if (!ListenerUtil.mutListener.listen(26393)) {
                                                this.expressionRight = rightExpressionInBrackets;
                                            }
                                            return true;
                                        }
                                    }
                                } else {
                                    if (!ListenerUtil.mutListener.listen(26380)) {
                                        this.atomType = Atom.AtomType.INVALID;
                                    }
                                    return false;
                                }
                            }
                        }
                    }
                }
            }
        }
        return false;
    }

    public Atom.AtomType getAtomType() {
        return atomType;
    }

    @Override
    public double getValue() throws ExpressionFormatException {
        if (atomType != Atom.AtomType.INVALID) {
            return parser.getFuncVal(funcName, expressionLeft.getValue(), expressionRight.getValue());
        } else {
            throw new ExpressionFormatException("Number is Invalid, cannot parse");
        }
    }

    @Override
    public boolean isVariable() throws ExpressionFormatException {
        if (atomType != Atom.AtomType.INVALID) {
            return (ListenerUtil.mutListener.listen(26407) ? (expressionLeft.isVariable() && expressionRight.isVariable()) : (expressionLeft.isVariable() || expressionRight.isVariable()));
        } else {
            throw new ExpressionFormatException("Number is Invalid, cannot parse");
        }
    }
}
