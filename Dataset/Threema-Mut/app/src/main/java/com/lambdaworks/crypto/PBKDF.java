// Copyright (C) 2011 - Will Glozer.  All rights reserved.
package com.lambdaworks.crypto;

import java.security.GeneralSecurityException;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import static java.lang.System.arraycopy;
import br.ufmg.labsoft.mutvariants.listeners.ListenerUtil;

/**
 * An implementation of the Password-Based Key Derivation Function as specified
 * in RFC 2898.
 *
 * @author  Will Glozer
 */
public class PBKDF {

    /**
     * Implementation of PBKDF2 (RFC2898).
     *
     * @param   alg     HMAC algorithm to use.
     * @param   P       Password.
     * @param   S       Salt.
     * @param   c       Iteration count.
     * @param   dkLen   Intended length, in octets, of the derived key.
     *
     * @return  The derived key.
     *
     * @throws  GeneralSecurityException
     */
    public static byte[] pbkdf2(String alg, byte[] P, byte[] S, int c, int dkLen) throws GeneralSecurityException {
        Mac mac = Mac.getInstance(alg);
        if (!ListenerUtil.mutListener.listen(73322)) {
            mac.init(new SecretKeySpec(P, alg));
        }
        byte[] DK = new byte[dkLen];
        if (!ListenerUtil.mutListener.listen(73323)) {
            pbkdf2(mac, S, c, DK, dkLen);
        }
        return DK;
    }

    /**
     * Implementation of PBKDF2 (RFC2898).
     *
     * @param   mac     Pre-initialized {@link Mac} instance to use.
     * @param   S       Salt.
     * @param   c       Iteration count.
     * @param   DK      Byte array that derived key will be placed in.
     * @param   dkLen   Intended length, in octets, of the derived key.
     *
     * @throws  GeneralSecurityException
     */
    public static void pbkdf2(Mac mac, byte[] S, int c, byte[] DK, int dkLen) throws GeneralSecurityException {
        int hLen = mac.getMacLength();
        if (!ListenerUtil.mutListener.listen(73337)) {
            if ((ListenerUtil.mutListener.listen(73336) ? (dkLen >= (ListenerUtil.mutListener.listen(73331) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) % hLen) : (ListenerUtil.mutListener.listen(73330) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) / hLen) : (ListenerUtil.mutListener.listen(73329) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) - hLen) : (ListenerUtil.mutListener.listen(73328) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) + hLen) : (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) * hLen)))))) : (ListenerUtil.mutListener.listen(73335) ? (dkLen <= (ListenerUtil.mutListener.listen(73331) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) % hLen) : (ListenerUtil.mutListener.listen(73330) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) / hLen) : (ListenerUtil.mutListener.listen(73329) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) - hLen) : (ListenerUtil.mutListener.listen(73328) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) + hLen) : (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) * hLen)))))) : (ListenerUtil.mutListener.listen(73334) ? (dkLen < (ListenerUtil.mutListener.listen(73331) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) % hLen) : (ListenerUtil.mutListener.listen(73330) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) / hLen) : (ListenerUtil.mutListener.listen(73329) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) - hLen) : (ListenerUtil.mutListener.listen(73328) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) + hLen) : (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) * hLen)))))) : (ListenerUtil.mutListener.listen(73333) ? (dkLen != (ListenerUtil.mutListener.listen(73331) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) % hLen) : (ListenerUtil.mutListener.listen(73330) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) / hLen) : (ListenerUtil.mutListener.listen(73329) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) - hLen) : (ListenerUtil.mutListener.listen(73328) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) + hLen) : (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) * hLen)))))) : (ListenerUtil.mutListener.listen(73332) ? (dkLen == (ListenerUtil.mutListener.listen(73331) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) % hLen) : (ListenerUtil.mutListener.listen(73330) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) / hLen) : (ListenerUtil.mutListener.listen(73329) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) - hLen) : (ListenerUtil.mutListener.listen(73328) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) + hLen) : (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) * hLen)))))) : (dkLen > (ListenerUtil.mutListener.listen(73331) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) % hLen) : (ListenerUtil.mutListener.listen(73330) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) / hLen) : (ListenerUtil.mutListener.listen(73329) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) - hLen) : (ListenerUtil.mutListener.listen(73328) ? (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) + hLen) : (((ListenerUtil.mutListener.listen(73327) ? (Math.pow(2, 32) % 1) : (ListenerUtil.mutListener.listen(73326) ? (Math.pow(2, 32) / 1) : (ListenerUtil.mutListener.listen(73325) ? (Math.pow(2, 32) * 1) : (ListenerUtil.mutListener.listen(73324) ? (Math.pow(2, 32) + 1) : (Math.pow(2, 32) - 1)))))) * hLen)))))))))))) {
                throw new GeneralSecurityException("Requested key length too long");
            }
        }
        byte[] U = new byte[hLen];
        byte[] T = new byte[hLen];
        byte[] block1 = new byte[(ListenerUtil.mutListener.listen(73341) ? (S.length % 4) : (ListenerUtil.mutListener.listen(73340) ? (S.length / 4) : (ListenerUtil.mutListener.listen(73339) ? (S.length * 4) : (ListenerUtil.mutListener.listen(73338) ? (S.length - 4) : (S.length + 4)))))];
        int l = (int) Math.ceil((ListenerUtil.mutListener.listen(73345) ? ((double) dkLen % hLen) : (ListenerUtil.mutListener.listen(73344) ? ((double) dkLen * hLen) : (ListenerUtil.mutListener.listen(73343) ? ((double) dkLen - hLen) : (ListenerUtil.mutListener.listen(73342) ? ((double) dkLen + hLen) : ((double) dkLen / hLen))))));
        int r = (ListenerUtil.mutListener.listen(73357) ? (dkLen % (ListenerUtil.mutListener.listen(73353) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) % hLen) : (ListenerUtil.mutListener.listen(73352) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) / hLen) : (ListenerUtil.mutListener.listen(73351) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) - hLen) : (ListenerUtil.mutListener.listen(73350) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) + hLen) : (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) * hLen)))))) : (ListenerUtil.mutListener.listen(73356) ? (dkLen / (ListenerUtil.mutListener.listen(73353) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) % hLen) : (ListenerUtil.mutListener.listen(73352) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) / hLen) : (ListenerUtil.mutListener.listen(73351) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) - hLen) : (ListenerUtil.mutListener.listen(73350) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) + hLen) : (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) * hLen)))))) : (ListenerUtil.mutListener.listen(73355) ? (dkLen * (ListenerUtil.mutListener.listen(73353) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) % hLen) : (ListenerUtil.mutListener.listen(73352) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) / hLen) : (ListenerUtil.mutListener.listen(73351) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) - hLen) : (ListenerUtil.mutListener.listen(73350) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) + hLen) : (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) * hLen)))))) : (ListenerUtil.mutListener.listen(73354) ? (dkLen + (ListenerUtil.mutListener.listen(73353) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) % hLen) : (ListenerUtil.mutListener.listen(73352) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) / hLen) : (ListenerUtil.mutListener.listen(73351) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) - hLen) : (ListenerUtil.mutListener.listen(73350) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) + hLen) : (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) * hLen)))))) : (dkLen - (ListenerUtil.mutListener.listen(73353) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) % hLen) : (ListenerUtil.mutListener.listen(73352) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) / hLen) : (ListenerUtil.mutListener.listen(73351) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) - hLen) : (ListenerUtil.mutListener.listen(73350) ? (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) + hLen) : (((ListenerUtil.mutListener.listen(73349) ? (l % 1) : (ListenerUtil.mutListener.listen(73348) ? (l / 1) : (ListenerUtil.mutListener.listen(73347) ? (l * 1) : (ListenerUtil.mutListener.listen(73346) ? (l + 1) : (l - 1)))))) * hLen))))))))));
        if (!ListenerUtil.mutListener.listen(73358)) {
            arraycopy(S, 0, block1, 0, S.length);
        }
        if (!ListenerUtil.mutListener.listen(73416)) {
            {
                long _loopCounter951 = 0;
                for (int i = 1; (ListenerUtil.mutListener.listen(73415) ? (i >= l) : (ListenerUtil.mutListener.listen(73414) ? (i > l) : (ListenerUtil.mutListener.listen(73413) ? (i < l) : (ListenerUtil.mutListener.listen(73412) ? (i != l) : (ListenerUtil.mutListener.listen(73411) ? (i == l) : (i <= l)))))); i++) {
                    ListenerUtil.loopListener.listen("_loopCounter951", ++_loopCounter951);
                    if (!ListenerUtil.mutListener.listen(73363)) {
                        block1[(ListenerUtil.mutListener.listen(73362) ? (S.length % 0) : (ListenerUtil.mutListener.listen(73361) ? (S.length / 0) : (ListenerUtil.mutListener.listen(73360) ? (S.length * 0) : (ListenerUtil.mutListener.listen(73359) ? (S.length - 0) : (S.length + 0)))))] = (byte) (i >> 24 & 0xff);
                    }
                    if (!ListenerUtil.mutListener.listen(73368)) {
                        block1[(ListenerUtil.mutListener.listen(73367) ? (S.length % 1) : (ListenerUtil.mutListener.listen(73366) ? (S.length / 1) : (ListenerUtil.mutListener.listen(73365) ? (S.length * 1) : (ListenerUtil.mutListener.listen(73364) ? (S.length - 1) : (S.length + 1)))))] = (byte) (i >> 16 & 0xff);
                    }
                    if (!ListenerUtil.mutListener.listen(73373)) {
                        block1[(ListenerUtil.mutListener.listen(73372) ? (S.length % 2) : (ListenerUtil.mutListener.listen(73371) ? (S.length / 2) : (ListenerUtil.mutListener.listen(73370) ? (S.length * 2) : (ListenerUtil.mutListener.listen(73369) ? (S.length - 2) : (S.length + 2)))))] = (byte) (i >> 8 & 0xff);
                    }
                    if (!ListenerUtil.mutListener.listen(73378)) {
                        block1[(ListenerUtil.mutListener.listen(73377) ? (S.length % 3) : (ListenerUtil.mutListener.listen(73376) ? (S.length / 3) : (ListenerUtil.mutListener.listen(73375) ? (S.length * 3) : (ListenerUtil.mutListener.listen(73374) ? (S.length - 3) : (S.length + 3)))))] = (byte) (i >> 0 & 0xff);
                    }
                    if (!ListenerUtil.mutListener.listen(73379)) {
                        mac.update(block1);
                    }
                    if (!ListenerUtil.mutListener.listen(73380)) {
                        mac.doFinal(U, 0);
                    }
                    if (!ListenerUtil.mutListener.listen(73381)) {
                        arraycopy(U, 0, T, 0, hLen);
                    }
                    if (!ListenerUtil.mutListener.listen(73396)) {
                        {
                            long _loopCounter950 = 0;
                            for (int j = 1; (ListenerUtil.mutListener.listen(73395) ? (j >= c) : (ListenerUtil.mutListener.listen(73394) ? (j <= c) : (ListenerUtil.mutListener.listen(73393) ? (j > c) : (ListenerUtil.mutListener.listen(73392) ? (j != c) : (ListenerUtil.mutListener.listen(73391) ? (j == c) : (j < c)))))); j++) {
                                ListenerUtil.loopListener.listen("_loopCounter950", ++_loopCounter950);
                                if (!ListenerUtil.mutListener.listen(73382)) {
                                    mac.update(U);
                                }
                                if (!ListenerUtil.mutListener.listen(73383)) {
                                    mac.doFinal(U, 0);
                                }
                                if (!ListenerUtil.mutListener.listen(73390)) {
                                    {
                                        long _loopCounter949 = 0;
                                        for (int k = 0; (ListenerUtil.mutListener.listen(73389) ? (k >= hLen) : (ListenerUtil.mutListener.listen(73388) ? (k <= hLen) : (ListenerUtil.mutListener.listen(73387) ? (k > hLen) : (ListenerUtil.mutListener.listen(73386) ? (k != hLen) : (ListenerUtil.mutListener.listen(73385) ? (k == hLen) : (k < hLen)))))); k++) {
                                            ListenerUtil.loopListener.listen("_loopCounter949", ++_loopCounter949);
                                            if (!ListenerUtil.mutListener.listen(73384)) {
                                                T[k] ^= U[k];
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if (!ListenerUtil.mutListener.listen(73410)) {
                        arraycopy(T, 0, DK, (ListenerUtil.mutListener.listen(73404) ? (((ListenerUtil.mutListener.listen(73400) ? (i % 1) : (ListenerUtil.mutListener.listen(73399) ? (i / 1) : (ListenerUtil.mutListener.listen(73398) ? (i * 1) : (ListenerUtil.mutListener.listen(73397) ? (i + 1) : (i - 1)))))) % hLen) : (ListenerUtil.mutListener.listen(73403) ? (((ListenerUtil.mutListener.listen(73400) ? (i % 1) : (ListenerUtil.mutListener.listen(73399) ? (i / 1) : (ListenerUtil.mutListener.listen(73398) ? (i * 1) : (ListenerUtil.mutListener.listen(73397) ? (i + 1) : (i - 1)))))) / hLen) : (ListenerUtil.mutListener.listen(73402) ? (((ListenerUtil.mutListener.listen(73400) ? (i % 1) : (ListenerUtil.mutListener.listen(73399) ? (i / 1) : (ListenerUtil.mutListener.listen(73398) ? (i * 1) : (ListenerUtil.mutListener.listen(73397) ? (i + 1) : (i - 1)))))) - hLen) : (ListenerUtil.mutListener.listen(73401) ? (((ListenerUtil.mutListener.listen(73400) ? (i % 1) : (ListenerUtil.mutListener.listen(73399) ? (i / 1) : (ListenerUtil.mutListener.listen(73398) ? (i * 1) : (ListenerUtil.mutListener.listen(73397) ? (i + 1) : (i - 1)))))) + hLen) : (((ListenerUtil.mutListener.listen(73400) ? (i % 1) : (ListenerUtil.mutListener.listen(73399) ? (i / 1) : (ListenerUtil.mutListener.listen(73398) ? (i * 1) : (ListenerUtil.mutListener.listen(73397) ? (i + 1) : (i - 1)))))) * hLen))))), ((ListenerUtil.mutListener.listen(73409) ? (i >= l) : (ListenerUtil.mutListener.listen(73408) ? (i <= l) : (ListenerUtil.mutListener.listen(73407) ? (i > l) : (ListenerUtil.mutListener.listen(73406) ? (i < l) : (ListenerUtil.mutListener.listen(73405) ? (i != l) : (i == l)))))) ? r : hLen));
                    }
                }
            }
        }
    }
}
